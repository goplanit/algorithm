#문제 분석
# 이전에 풀었던 셀프함수 문제와 유사하다.
# 셀프함수 문제는 생성자가 없는 수를 구하는 것이었고, 이 문제는 어떤 수가 주어졌을때 생성자가 있다면 가장 작은 생성자를, 없다면 0을 출력하는 문제이다.
# 분해합이란 생성자와 생성자의 각 자릿수의 합으로 만들어진 수.
# 예를들어, 245의 분해합은 245+2+4+5의 값인 256이 된다. 245는 256의 생성자, 256은 245의 분해합이다.
# 입력값으로 분해합을 받고,
# 해당 분해합의 범위까지 생성자를 찾기 위해 for문을 돌린다.
# 분해합을 만드는 코드를 통해 생성자를 찾아낸다.
# 이때 if문으로 분해합과 입력받은 값이 같은지 확인하고, 맞다면 해당 분해합을 만든 생성자(i)를 출력한다.
# 만약 입력받은 값(n)과 분해합을 만든 생성자(i)가 같다면, 생성자가 자기 자신(분해합의 생성자는 없다는 뜻)이므로 0을 출력한다.



n = int(input())  # 분해합을 입력값으로 받음

for i in range(1, n+1):   # 해당 분해합의 생성자 찾기
    num = sum((map(int, str(i))))  # i의 각 자릿수를 더함
    num_sum = i + num  # 분해합 = 생성자 + 각 자릿수의 합
    # i가 작은 수부터 차례로 들어가므로 처음으로 분해합과 입력값이 같을때가 가장 작은 생성자를 가짐
    if num_sum == n:
        print(i)
        break
    if i == n:  # 생성자 i와 입력값이 같다는 것은 생성자가 없다는 뜻
        print(0)